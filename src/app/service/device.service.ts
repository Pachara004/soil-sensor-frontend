import { Injectable } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';

export interface SelectedDeviceData {
  deviceId: string;
  deviceName: string;
  deviceStatus: 'online' | 'offline';
  deviceType?: boolean;
  lastUpdated: string;
}

@Injectable({
  providedIn: 'root'
})
export class DeviceService {
  private selectedDeviceSubject = new BehaviorSubject<SelectedDeviceData | null>(null);
  public selectedDevice$ = this.selectedDeviceSubject.asObservable();

  constructor() {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å localStorage ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô service
    this.loadSelectedDeviceFromStorage();
  }

  // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô localStorage ‡πÅ‡∏•‡∏∞ BehaviorSubject
  setSelectedDevice(deviceData: SelectedDeviceData | null): void {
    if (deviceData) {
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï timestamp
      deviceData.lastUpdated = new Date().toISOString();
      
      // ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô localStorage
      localStorage.setItem('selectedDeviceId', deviceData.deviceId);
      localStorage.setItem('selectedDevice', JSON.stringify(deviceData));
      
      console.log('üíæ Device data saved to localStorage via DeviceService:', deviceData);
    } else {
      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage
      localStorage.removeItem('selectedDeviceId');
      localStorage.removeItem('selectedDevice');
      
      console.log('üóëÔ∏è Device data removed from localStorage via DeviceService');
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï BehaviorSubject ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ components ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏£‡∏≤‡∏ö
    this.selectedDeviceSubject.next(deviceData);
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å localStorage
  getSelectedDevice(): SelectedDeviceData | null {
    try {
      const deviceData = localStorage.getItem('selectedDevice');
      if (deviceData) {
        const parsed = JSON.parse(deviceData);
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
        const lastUpdated = new Date(parsed.lastUpdated);
        const now = new Date();
        const hoursDiff = (now.getTime() - lastUpdated.getTime()) / (1000 * 60 * 60);
        
        if (hoursDiff > 1) {
          console.log('‚ö†Ô∏è Device data is too old, removing from localStorage');
          this.setSelectedDevice(null);
          return null;
        }
        
        return parsed;
      }
    } catch (error) {
      console.error('‚ùå Error parsing device data from localStorage:', error);
      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å
      this.setSelectedDevice(null);
    }
    
    return null;
  }

  // ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ deviceId ‡∏à‡∏≤‡∏Å localStorage (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö backward compatibility)
  getSelectedDeviceId(): string | null {
    return localStorage.getItem('selectedDeviceId');
  }

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å localStorage ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï BehaviorSubject
  private loadSelectedDeviceFromStorage(): void {
    const deviceData = this.getSelectedDevice();
    this.selectedDeviceSubject.next(deviceData);
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
  updateDeviceStatus(status: 'online' | 'offline'): void {
    const currentDevice = this.selectedDeviceSubject.value;
    if (currentDevice) {
      const updatedDevice = {
        ...currentDevice,
        deviceStatus: status,
        lastUpdated: new Date().toISOString()
      };
      this.setSelectedDevice(updatedDevice);
    }
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  hasSelectedDevice(): boolean {
    return this.selectedDeviceSubject.value !== null;
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏ö‡∏ö synchronous
  getCurrentDevice(): SelectedDeviceData | null {
    return this.selectedDeviceSubject.value;
  }

  // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  clearSelectedDevice(): void {
    this.setSelectedDevice(null);
  }
}
